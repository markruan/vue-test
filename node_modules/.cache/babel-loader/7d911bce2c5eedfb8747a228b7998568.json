{"remainingRequest":"/Users/mc/项目/VUE/2020/node_modules/babel-loader/lib/index.js!/Users/mc/项目/VUE/2020/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mc/项目/VUE/2020/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mc/项目/VUE/2020/node_modules/vue-audio-cover-x/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mc/项目/VUE/2020/node_modules/vue-audio-cover-x/index.vue","mtime":499162500000},{"path":"/Users/mc/项目/VUE/2020/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mc/项目/VUE/2020/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mc/项目/VUE/2020/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mc/项目/VUE/2020/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.match\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: '',\n  props: {\n    musicData: {\n      type: Object,\n      required: true,\n      default: {\n        title: \"起风了\",\n        cover: \"http://wenba-ooo-qiniu.xueba100.com/cd4ba4a4d6cc0925a9b39d65c3d11ad6.jpeg\",\n        src: \"http://ting666.yymp3.com:86/new27/mljyyj/1.mp3\",\n        audioDuration: '',\n        id: 0\n      }\n    }\n  },\n  data: function data() {\n    return {\n      playStatus: false,\n      progress: 0,\n      // 播放进度 0 － 100\n      duration: 0,\n      // 总时长（秒）\n      durationTime: null,\n      // 总时长（秒）\n      playStatusTime: 0,\n      // 当前播放时间（秒）\n      playEnd: false,\n      // 播放是否结束状态\n      loadingStatus: true\n    };\n  },\n  computed: {\n    progressStr: function progressStr() {\n      return parseInt(this.progress) + '%';\n    }\n  },\n  mounted: function mounted() {\n    this.judegPlayStatusFn();\n    this.getDurationFn();\n    this.observerProgressFn();\n  },\n  methods: {\n    // 重置\n    reset: function reset() {\n      this.playStatus = false;\n      this.progress = 0;\n      this.duration = 0;\n      this.playStatusTime = 0;\n      this.loadingStatus = false;\n    },\n    // 播放切换\n    togglePlayFn: function togglePlayFn() {\n      this.playStatus = !this.playStatus;\n\n      if (this.playStatus) {\n        // play\n        this.loadingStatus = true;\n\n        if (this.playEnd) {\n          this.$refs.audioDom.currentTime = 0;\n          this.observerProgressFn();\n        }\n\n        this.$refs.audioDom.play();\n      } else {\n        // pause\n        this.$refs.audioDom.pause();\n      }\n    },\n    // 点击\n    clickProgressFn: function clickProgressFn(event) {\n      var offsetX = event.offsetX;\n      var progerssWidth = this.$refs.progerssDom.offsetWidth;\n      this.calculationFn(offsetX, progerssWidth); // 快进\n\n      if (this.durationTime !== null) {\n        this.$refs.audioDom.currentTime = offsetX / progerssWidth * this.durationTime;\n      }\n    },\n    // 拖动\n    moveProgressFn: function moveProgressFn(event) {\n      var progerssLeft = this.$refs.progerssDom.offsetLeft;\n      var progerssWidth = this.$refs.progerssDom.offsetWidth;\n      var maxClientX = progerssLeft + progerssWidth;\n      var clientX = event.touches[0].clientX;\n\n      if (event.touches[0].clientX >= maxClientX) {\n        clientX = maxClientX;\n      }\n\n      if (event.touches[0].clientX <= progerssLeft) {\n        clientX = progerssLeft;\n      }\n\n      var curLen = clientX - progerssLeft;\n\n      if (clientX > maxClientX) {\n        return false;\n      }\n\n      this.calculationFn(curLen, progerssWidth); // 快进\n\n      if (this.durationTime !== null) {\n        this.$refs.audioDom.currentTime = curLen / progerssWidth * this.durationTime;\n      }\n    },\n    // 计算进度条\n    calculationFn: function calculationFn(curLen, totalLen) {\n      // curlen 当前长度；totleLen 总长\n      this.progress = parseFloat(parseInt(curLen) / parseInt(totalLen)).toFixed(2) * 100;\n      this.progress = this.progress >= 100 ? 100 : this.progress;\n    },\n    // 获取时长\n    getDurationFn: function getDurationFn() {\n      var _this = this;\n\n      var audioDom = this.$refs.audioDom;\n      this.timer1 = setInterval(function () {\n        if (audioDom.readyState != 0) {\n          _this.loadingStatus = false;\n          _this.durationTime = audioDom.duration;\n          _this.duration = audioDom.duration;\n          clearInterval(_this.timer1);\n        }\n      }, 200);\n    },\n    // 监控播放进度\n    observerProgressFn: function observerProgressFn() {\n      var _this = this;\n\n      var musicId = this.musicData.id || 0;\n      var audioDom = this.$refs.audioDom;\n      var audioDuration = null;\n      var isIOS = !!navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n\n      if (isIOS) {\n        _this.loadingStatus = false;\n      }\n\n      this.timer2 = setInterval(function () {\n        if (audioDom.readyState === 4) {\n          _this.loadingStatus = false;\n\n          if (audioDuration === null) {\n            audioDuration = audioDom.duration;\n            _this.durationTime = audioDom.duration;\n            _this.duration = audioDom.duration;\n          }\n\n          _this.playStatusTime = audioDom.currentTime;\n          _this.progress = parseInt(audioDom.currentTime / audioDuration * 100);\n          localStorage.setItem('musicId', musicId);\n          localStorage.setItem('currentTime', audioDom.currentTime);\n\n          if (audioDom.ended) {\n            _this.playStatus = false;\n            _this.playEnd = true;\n\n            _this.playEndFn();\n\n            clearInterval(_this.timer2);\n          }\n        }\n      }, 1000);\n    },\n    // 监控音频播放结束\n    playEndFn: function playEndFn() {\n      this.$emit('playEndFn');\n    },\n    // 判断是否有记忆播放状态\n    judegPlayStatusFn: function judegPlayStatusFn() {\n      if (this.musicData.hasOwnProperty('id') && this.musicData.id !== '') {\n        var musicId = localStorage.getItem('musicId');\n        var cookieCurrentTime = localStorage.getItem('currentTime');\n\n        if (musicId !== null && musicId == this.musicData.id) {\n          this.$refs.audioDom.currentTime = cookieCurrentTime;\n        }\n      }\n    }\n  },\n  filters: {\n    // 秒(s) ＝> 00:00\n    changeTimeFn: function changeTimeFn(time) {\n      var timeRxFn = function timeRxFn(x) {\n        var timeRx = new RegExp(/^[0-9]$/g);\n\n        if (timeRx.test(x)) {\n          return '0' + x;\n        } else {\n          return x;\n        }\n      };\n\n      var _time = time;\n      var hour = parseInt(_time / 3600); //时\n\n      var minutes = parseInt(_time % 3600 / 60); //分\n\n      var second = parseInt(_time % 3600 % 60); //秒\n\n      var timeStr = hour + ':' + timeRxFn(minutes) + ':' + timeRxFn(second);\n\n      if (hour == 0) {\n        timeStr = timeRxFn(minutes) + ':' + timeRxFn(second);\n      }\n\n      return timeStr;\n    }\n  },\n  watch: {\n    'musicData.src': {\n      handler: function handler(newVal, oldVal) {\n        this.reset();\n      },\n      deep: true\n    }\n  },\n  destroyed: function destroyed() {\n    clearInterval(this.timer1);\n    clearInterval(this.timer2);\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"audioPlayerX\">\n        <div class=\"audioCard\">\n            <button class=\"playBtn\" :style=\"'backgroundImage: url( ' + musicData.cover + ' )'\" :class=\"{'pauseStatus': playStatus, 'loadingStatus': loadingStatus}\"\n                    @click=\"togglePlayFn\" :diasbled=\"!loadingStatus\"></button>\n            <div class=\"info\">\n                <p class=\"tit\">{{musicData.title}}</p>\n                <div class=\"bomStatus\">\n                    <div class=\"progress\" @click=\"clickProgressFn\" ref=\"progerssDom\">\n                        <p class=\"progressBar\" :style=\"{width: progressStr}\"></p>\n                        <button class=\"dot\" :style=\"{left: progressStr}\" @touchmove=\"moveProgressFn\"></button>\n                    </div>\n                </div>\n                <div class=\"time-cover\">\n                    <span class=\"timeStatus\">{{playStatusTime | changeTimeFn}}</span>\n                    <span class=\"timeOver\">{{(duration || musicData.audioDuration) | changeTimeFn}}</span>\n                </div>\n            </div>\n        </div>\n        <audio :src=\"musicData.src\" ref=\"audioDom\" preload=\"auto\" class=\"audio\"></audio>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: '',\n        props: {\n            musicData:{\n                type: Object,\n                required: true,\n                default: {\n                    title: \"起风了\",\n                    cover: \"http://wenba-ooo-qiniu.xueba100.com/cd4ba4a4d6cc0925a9b39d65c3d11ad6.jpeg\",\n                    src: \"http://ting666.yymp3.com:86/new27/mljyyj/1.mp3\",\n                    audioDuration: '',\n                    id: 0\n                }\n            }\n        },\n        data () {\n            return {\n                playStatus: false,\n                progress: 0, // 播放进度 0 － 100\n                duration: 0, // 总时长（秒）\n                durationTime: null, // 总时长（秒）\n                playStatusTime: 0, // 当前播放时间（秒）\n                playEnd: false, // 播放是否结束状态\n                loadingStatus: true\n            }\n        },\n        computed: {\n            progressStr (){\n                return (parseInt(this.progress)) + '%';\n            }\n        },\n        mounted (){\n            this.judegPlayStatusFn();\n            this.getDurationFn();\n            this.observerProgressFn();\n        },\n        methods: {\n            // 重置\n            reset() {\n                this.playStatus = false;\n                this.progress = 0;\n                this.duration = 0;\n                this.playStatusTime = 0;\n                this.loadingStatus = false;\n            },\n            // 播放切换\n            togglePlayFn (){\n                this.playStatus = !this.playStatus;\n                if (this.playStatus) {\n                    // play\n                    this.loadingStatus = true;\n                    if (this.playEnd) {\n                        this.$refs.audioDom.currentTime = 0;\n                        this.observerProgressFn();\n                    }\n                    this.$refs.audioDom.play();\n                } else {\n                    // pause\n                    this.$refs.audioDom.pause();\n                }\n            },\n            // 点击\n            clickProgressFn (event){\n                var offsetX = event.offsetX;\n                var progerssWidth = this.$refs.progerssDom.offsetWidth;\n                this.calculationFn(offsetX, progerssWidth);\n                // 快进\n                if (this.durationTime !== null) {\n                    this.$refs.audioDom.currentTime = offsetX / progerssWidth * this.durationTime;\n                }\n            },\n            // 拖动\n            moveProgressFn (event){\n                var progerssLeft = this.$refs.progerssDom.offsetLeft;\n                var progerssWidth = this.$refs.progerssDom.offsetWidth;\n                var maxClientX = progerssLeft + progerssWidth;\n                var clientX = event.touches[0].clientX;\n                if (event.touches[0].clientX >= maxClientX) {\n                    clientX = maxClientX;\n                }\n                if (event.touches[0].clientX <= progerssLeft) {\n                    clientX = progerssLeft;\n                }\n                var curLen = clientX - progerssLeft;\n                if (clientX > maxClientX) {\n                    return false;\n                }\n                this.calculationFn(curLen, progerssWidth);\n                // 快进\n                if (this.durationTime !== null) {\n                    this.$refs.audioDom.currentTime = curLen / progerssWidth * this.durationTime;\n                }\n            },\n            // 计算进度条\n            calculationFn (curLen, totalLen){\n                // curlen 当前长度；totleLen 总长\n                this.progress = (parseFloat(parseInt(curLen) / parseInt(totalLen))).toFixed(2) * 100;\n                this.progress = this.progress >= 100 ? 100 : this.progress;\n            },\n            // 获取时长\n            getDurationFn (){\n                var _this = this;\n                var audioDom = this.$refs.audioDom;\n                this.timer1 = setInterval(function () {\n                    if (audioDom.readyState != 0) {\n                        _this.loadingStatus = false;\n                        _this.durationTime = audioDom.duration;\n                        _this.duration = audioDom.duration;\n                        clearInterval(_this.timer1);\n                    }\n                }, 200);\n            },\n            // 监控播放进度\n            observerProgressFn (){\n                var _this = this;\n                var musicId = this.musicData.id || 0;\n                var audioDom = this.$refs.audioDom;\n                var audioDuration = null;\n                var isIOS = !!navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n                if (isIOS) {\n                    _this.loadingStatus = false;\n                }\n                this.timer2 = setInterval(function () {\n                    if (audioDom.readyState === 4) {\n                        _this.loadingStatus = false;\n                        if (audioDuration === null) {\n                            audioDuration = audioDom.duration;\n                            _this.durationTime = audioDom.duration;\n                            _this.duration = audioDom.duration;\n                        }\n                        _this.playStatusTime = audioDom.currentTime;\n                        _this.progress = parseInt(audioDom.currentTime / audioDuration * 100);\n                        localStorage.setItem('musicId', musicId);\n                        localStorage.setItem('currentTime', audioDom.currentTime);\n                        if (audioDom.ended) {\n                            _this.playStatus = false;\n                            _this.playEnd = true;\n                            _this.playEndFn();\n                            clearInterval(_this.timer2);\n                        }\n                    }\n                }, 1000)\n            },\n            // 监控音频播放结束\n            playEndFn () {\n                this.$emit('playEndFn');\n            },\n            // 判断是否有记忆播放状态\n            judegPlayStatusFn (){\n                if (this.musicData.hasOwnProperty('id') && this.musicData.id !== '' ) {\n                    var musicId = localStorage.getItem('musicId');\n                    var cookieCurrentTime = localStorage.getItem('currentTime');\n                    if (musicId !== null && musicId == this.musicData.id) {\n                        this.$refs.audioDom.currentTime = cookieCurrentTime;\n                    }\n                }\n            }\n        },\n        filters: {\n            // 秒(s) ＝> 00:00\n            changeTimeFn (time){\n                var timeRxFn = function (x) {\n                    var timeRx = new RegExp(/^[0-9]$/g);\n                    if (timeRx.test(x)) {\n                        return '0' + x;\n                    } else {\n                        return x;\n                    }\n                };\n                var _time = time;\n                var hour = parseInt(_time / 3600); //时\n                var minutes = parseInt((_time % 3600) / 60); //分\n                var second = parseInt((_time % 3600) % 60); //秒\n                var timeStr = hour + ':' + timeRxFn(minutes) + ':' + timeRxFn(second);\n                if (hour == 0) {\n                    timeStr = timeRxFn(minutes) + ':' + timeRxFn(second);\n                }\n                return timeStr;\n            }\n        },\n        watch: {\n            'musicData.src': {\n                handler (newVal, oldVal){\n                    this.reset();\n                },\n                deep: true\n            }\n        },\n        destroyed () {\n            clearInterval(this.timer1);\n            clearInterval(this.timer2);\n        }\n    }\n</script>\n<style>\n    .audioPlayerX {\n        display: block;\n        width: 100%;\n        height: 80px;\n        padding: 5px 6px;\n        box-sizing: border-box;\n        position: relative;\n    }\n\n    .audioPlayerX .audioCard {\n        width: 100%;\n        height: 100%;\n    }\n\n    .audioPlayerX .audioCard .playBtn {\n        float: left;\n        width: 50px;\n        height: 50px;\n        margin-top:10px;\n        background-position: center;\n        background-color: #efefef;\n        background-repeat: no-repeat;\n        background-size: cover;\n        position: relative;\n        z-index: 2;\n    }\n\n    .audioPlayerX .audioCard .playBtn::after {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background: url(\"./img/playIco.png\") no-repeat 60% center;\n        background-color: rgba(0, 0, 0, 0);\n        background-size: 50% auto;\n    }\n\n    .audioPlayerX .audioCard .playBtn.pauseStatus::after {\n        background-image: url(\"./img/pauseIco.png\");\n        background-position: 56% center;\n        background-size: 50% auto;\n    }\n\n    .audioPlayerX .audioCard .playBtn.loadingStatus::after {\n        background-image: url(\"./img/loding.png\");\n        background-position: center;\n        background-size: 50% auto;\n        animation: rotateFrame 3s infinite linear;\n        -webkit-animation: rotateFrame 3s infinite linear;\n        -moz-animation: rotateFrame 3s infinite linear;\n        -ms-animation: rotateFrame 3s infinite linear;\n        -o-animation: rotateFrame 3s infinite linear;\n    }\n\n    @keyframes rotateFrame {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(360deg);\n        }\n    }\n\n    @-webkit-keyframes rotateFrame {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(360deg);\n        }\n    }\n\n    @-moz-keyframes rotateFrame {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(360deg);\n        }\n    }\n    @-ms-keyframes rotateFrame {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(360deg);\n        }\n    }\n    @-o-keyframes rotateFrame {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(360deg);\n        }\n    }\n\n    .audioPlayerX .audioCard .info {\n        position: absolute;\n        left:0;\n        top:0;\n        width: 100%;\n        padding: 15px 10px 0 70px;\n        box-sizing: border-box;\n    }\n\n    .audioPlayerX .audioCard .info .tit {\n        display: block;\n        font-size: 12px;\n        width: 100%;\n        height: 14px;\n        line-height: 14px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        color: #979797;\n        white-space: nowrap;\n        padding-bottom: 8px;\n    }\n\n    .audioPlayerX .bomStatus {\n        width: 100%;\n        height: 14px;\n        line-height: 14px;\n    }\n\n    .audioPlayerX .audioCard .info .progress {\n        float: left;\n        width: 95%;\n        height: 2px;\n        background: rgba(237, 237, 237, 0.4);\n        border-radius: 2px;\n        margin-top: 5px;\n        cursor: pointer;\n        position: relative;\n    }\n\n    .audioPlayerX .audioCard .info .progressBar {\n        width: 95%;\n        height: 100%;\n        border-bottom-left-radius: 2px;\n        border-top-left-radius: 2px;\n        background: #FE5263;\n    }\n\n    .audioPlayerX .audioCard .info .progress .dot {\n        position: absolute;\n        top: -6px;\n        width: 14px;\n        height: 14px;\n        border-radius: 50%;\n        background: rgba(254, 70, 86, 0.17);\n    }\n\n    .audioPlayerX .audioCard .info .progress .dot::after {\n        content: '';\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        margin: -3px 0 0 -3px;\n        width: 6px;\n        height: 6px;\n        /*! autoprefixer: off */\n        background: -webkit-linear-gradient(left top, #FF6773, #FE5263);\n        /* autoprefixer: on */\n        background: linear-gradient(left top, #FF6773, #FE5263);\n        border-radius: 50%;\n    }\n\n    .audioPlayerX .time-cover {\n        font-size: 10px;\n        color: #333;\n        overflow: hidden;\n        line-height: 10px;\n        padding-top: 4px;\n        width: 95%;\n    }\n\n    .audioPlayerX .timeStatus {\n        float: left;\n    }\n\n    .audioPlayerX .timeOver {\n        float: right;\n    }\n\n    .audioPlayerX .audio {\n        width: 1px;\n        height: 1px;\n        opacity: 0;\n    }\n</style>"],"sourceRoot":"node_modules/vue-audio-cover-x"}]}