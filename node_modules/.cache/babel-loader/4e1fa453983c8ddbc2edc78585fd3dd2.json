{"remainingRequest":"/Users/mark/vue/vue-test/node_modules/babel-loader/lib/index.js!/Users/mark/vue/vue-test/node_modules/eslint-loader/index.js??ref--13-0!/Users/mark/vue/vue-test/src/store/index.js","dependencies":[{"path":"/Users/mark/vue/vue-test/src/store/index.js","mtime":1603424726806},{"path":"/Users/mark/vue/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/vue/vue-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mark/vue/vue-test/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/mark/vue/vue-test/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _mutations;\n\n/* Copyright.\n\n */\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { isPending } from 'q'; //挂载Vuex\n\nVue.use(Vuex); //创建VueX对象\n\nvar store = new Vuex.Store({\n  state: {\n    //存放的键值对就是所要管理的状态\n    playing: false,\n    duration: {},\n    currentTime: 0,\n    songId: {},\n    songName: {},\n    songUrl: '',\n    songImg: '',\n    songArtist: {},\n    showAplayer: true,\n    playList: [],\n    userinfo: ''\n  },\n  mutations: (_mutations = {\n    setSongName: function setSongName(state, name) {\n      state.songName = name;\n    },\n    setDuration: function setDuration(state, duration) {\n      state.duration = duration;\n    },\n    setCurrentTime: function setCurrentTime(state, currentTime) {\n      state.currentTime = currentTime;\n    },\n    setSongId: function setSongId(state, id) {\n      state.songId = id;\n    },\n    setSongUrl: function setSongUrl(state, songUrl) {\n      state.songUrl = songUrl;\n    },\n    setSongImg: function setSongImg(state, songImg) {\n      state.songImg = songImg;\n    }\n  }, _defineProperty(_mutations, \"setSongImg\", function setSongImg(state, songImg) {\n    state.songImg = songImg;\n  }), _defineProperty(_mutations, \"setSongArtist\", function setSongArtist(state, songArtist) {\n    state.songArtist = songArtist;\n  }), _defineProperty(_mutations, \"setPlaying\", function setPlaying(state, playing) {\n    state.playing = playing;\n  }), _defineProperty(_mutations, \"setShowAplayer\", function setShowAplayer(state, showAplayer) {\n    state.showAplayer = showAplayer;\n  }), _defineProperty(_mutations, \"setPlayList\", function setPlayList(state, list) {\n    state.playList = list;\n  }), _defineProperty(_mutations, \"setUserInfo\", function setUserInfo(state, info) {\n    state.userinfo = info;\n  }), _mutations),\n  actions: {\n    setSongNameActions: function setSongNameActions(context, name) {\n      context.commit('setSongName', name);\n    },\n    setDurationActions: function setDurationActions(context, duration) {\n      context.commit('setDuration', duration);\n    },\n    setCurrentTimeActions: function setCurrentTimeActions(context, setCurrentTime) {\n      context.commit('setCurrentTime', setCurrentTime);\n    },\n    setSongIdActions: function setSongIdActions(context, setSongId) {\n      context.commit('setSongId', setSongId);\n    },\n    setSongUrlActions: function setSongUrlActions(context, setSongUrl) {\n      context.commit('setSongUrl', setSongUrl);\n    },\n    setSongImgActions: function setSongImgActions(context, setSongImg) {\n      context.commit('setSongImg', setSongImg);\n    },\n    setSongArtistActions: function setSongArtistActions(context, songArtist) {\n      context.commit('setSongArtist', songArtist);\n    },\n    setPlayingActions: function setPlayingActions(context, setPlaying) {\n      context.commit('setPlaying', setPlaying);\n    },\n    setShowAplayerActions: function setShowAplayerActions(context, setShowAplayer) {\n      context.commit('setShowAplayer', setShowAplayer);\n    },\n    setPlayListActions: function setPlayListActions(context, list) {\n      context.commit('setPlayList', list);\n    },\n    setUserInfoActions: function setUserInfoActions(context, list) {\n      context.commit('setUserInfo', list);\n    }\n  }\n});\nexport default store;",{"version":3,"sources":["/Users/mark/vue/vue-test/src/store/index.js"],"names":["Vue","Vuex","isPending","use","store","Store","state","playing","duration","currentTime","songId","songName","songUrl","songImg","songArtist","showAplayer","playList","userinfo","mutations","setSongName","name","setDuration","setCurrentTime","setSongId","id","setSongUrl","setSongImg","list","info","actions","setSongNameActions","context","commit","setDurationActions","setCurrentTimeActions","setSongIdActions","setSongUrlActions","setSongImgActions","setSongArtistActions","setPlayingActions","setPlaying","setShowAplayerActions","setShowAplayer","setPlayListActions","setUserInfoActions"],"mappings":"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","sourcesContent":["/* Copyright.\n\n */\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport { isPending } from 'q';\n\n//挂载Vuex\nVue.use(Vuex)\n\n//创建VueX对象\nconst store = new Vuex.Store({\n    state: {\n        //存放的键值对就是所要管理的状态\n        playing: false,\n        duration: {},\n        currentTime: 0,\n        songId: {},\n        songName: {},\n        songUrl: '',\n        songImg: '',\n        songArtist: {},\n        showAplayer: true,\n        playList:[],\n        userinfo:''\n    },\n    mutations: {\n        setSongName(state, name) {\n            state.songName = name\n        },\n        setDuration(state, duration) {\n            state.duration = duration\n        },\n        setCurrentTime(state, currentTime) {\n            state.currentTime = currentTime\n        },\n        setSongId(state, id) {\n\n            state.songId = id\n        },\n        setSongUrl(state, songUrl) {\n            state.songUrl = songUrl\n        },\n        setSongImg(state, songImg) {\n            state.songImg = songImg\n        },\n        setSongImg(state, songImg) {\n            state.songImg = songImg\n        },\n        setSongArtist(state, songArtist) {\n            state.songArtist = songArtist\n        },\n        setPlaying(state, playing) {\n            state.playing = playing\n        },\n        setShowAplayer(state, showAplayer) {\n            state.showAplayer = showAplayer\n        },\n        setPlayList(state,list){\n          state.playList=list\n        },\n        setUserInfo(state,info){\n          state.userinfo=info\n        }\n\n\n    },\n    actions: {\n        setSongNameActions(context, name) {\n            context.commit('setSongName', name)\n        },\n        setDurationActions(context, duration) {\n            context.commit('setDuration', duration)\n        },\n        setCurrentTimeActions(context, setCurrentTime) {\n            context.commit('setCurrentTime', setCurrentTime)\n        },\n        setSongIdActions(context, setSongId) {\n            context.commit('setSongId', setSongId)\n        },\n        setSongUrlActions(context, setSongUrl) {\n            context.commit('setSongUrl', setSongUrl)\n        },\n        setSongImgActions(context, setSongImg) {\n            context.commit('setSongImg', setSongImg)\n        },\n        setSongArtistActions(context, songArtist) {\n            context.commit('setSongArtist', songArtist)\n        },\n        setPlayingActions(context, setPlaying) {\n            context.commit('setPlaying', setPlaying)\n        },\n        setShowAplayerActions(context, setShowAplayer) {\n            context.commit('setShowAplayer', setShowAplayer)\n        },\n        setPlayListActions(context, list) {\n            context.commit('setPlayList', list)\n        },\n        setUserInfoActions(context, list) {\n            context.commit('setUserInfo', list)\n        },\n\n    }\n})\n\nexport default store"]}]}