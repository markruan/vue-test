{"remainingRequest":"/Users/mark/vue/vue-test/node_modules/thread-loader/dist/cjs.js!/Users/mark/vue/vue-test/node_modules/babel-loader/lib/index.js!/Users/mark/vue/vue-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mark/vue/vue-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/vue/vue-test/src/pages/Mv.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mark/vue/vue-test/src/pages/Mv.vue","mtime":1604731556845},{"path":"/Users/mark/vue/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/vue/vue-test/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/vue/vue-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mark/vue/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/vue/vue-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Similarly, you can also introduce the plugin resource pack you want to use within the component\n// import 'some-videojs-plugin'\nexport default {\n  data: function data() {\n    return {\n      MvDetail: {},\n      playerOptions: {\n        playbackRates: [0.7, 1.0, 1.5, 2.0],\n        //播放速度\n        autoplay: false,\n        //如果true,浏览器准备好时开始回放。\n        muted: false,\n        // 默认情况下将会消除任何音频。\n        loop: true,\n        // 导致视频一结束就重新开始。\n        preload: \"auto\",\n        // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n        language: \"zh-CN\",\n        aspectRatio: \"16:9\",\n        // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n        fluid: true,\n        // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n        sources: [{\n          type: \"\",\n          //这里的种类支持很多种：基本视频格式、直播、流媒体等，具体可以参看git网址项目\n          src: \"\" //url地址\n\n        }],\n        // poster: this.MvDetail.cover?this.MvDetail.cover:require(\"../assets/logo.png\"), //你的封面地址\n        width: document.documentElement.clientWidth,\n        //播放器宽度\n        notSupportedMessage: \"此视频暂无法播放，请稍后再试\",\n        //允许覆盖Video.js无法播放媒体源时显示的默认信息。\n        controlBar: {\n          timeDivider: true,\n          durationDisplay: true,\n          remainingTimeDisplay: false,\n          fullscreenToggle: true //全屏按钮\n\n        }\n      }\n    };\n  },\n  created: function created() {},\n  props: {\n    name: {\n      type: String\n    }\n  },\n  mounted: function mounted() {\n    console.log(\"this is current player instance object\", this.player);\n    this.getMvDetail();\n    this.openMv();\n  },\n  computed: {// player() {\n    //   return this.$refs.videoPlayer.player;\n    // }\n  },\n  methods: {\n    openMv: function openMv() {\n      var this_ = this;\n      this.$http.get(this.host + \"/mv/url\", {\n        params: {\n          id: this.$route.params.id\n        }\n      }).then(function (response) {\n        this_.playerOptions.sources[0].src = response.data.data.url;\n      }).catch(function (error) {});\n    },\n    onClickLeft: function onClickLeft() {\n      this.$router.go(-1); //返回上一层\n    },\n    getMvDetail: function getMvDetail() {\n      var this_ = this;\n      this.$http.get(this.host + \"/mv/detail\", {\n        params: {\n          mvid: this.$route.params.id\n        }\n      }).then(function (response) {\n        this_.MvDetail = response.data.data;\n        this_.playerOptions.poster = this_.MvDetail.cover + \"?param=320y180\";\n        console.log(this_.MvDetail);\n      }).catch(function (error) {});\n    }\n  }\n};",{"version":3,"sources":["Mv.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,aAAA,EAAA;AACA,QAAA,aAAA,EAAA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CADA;AACA;AACA,QAAA,QAAA,EAAA,KAFA;AAEA;AACA,QAAA,KAAA,EAAA,KAHA;AAGA;AACA,QAAA,IAAA,EAAA,IAJA;AAIA;AACA,QAAA,OAAA,EAAA,MALA;AAKA;AACA,QAAA,QAAA,EAAA,OANA;AAOA,QAAA,WAAA,EAAA,MAPA;AAOA;AACA,QAAA,KAAA,EAAA,IARA;AAQA;AACA,QAAA,OAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA,EADA;AACA;AACA,UAAA,GAAA,EAAA,EAFA,CAEA;;AAFA,SADA,CATA;AAeA;AACA,QAAA,KAAA,EAAA,QAAA,CAAA,eAAA,CAAA,WAhBA;AAgBA;AACA,QAAA,mBAAA,EAAA,gBAjBA;AAiBA;AACA,QAAA,UAAA,EAAA;AACA,UAAA,WAAA,EAAA,IADA;AAEA,UAAA,eAAA,EAAA,IAFA;AAGA,UAAA,oBAAA,EAAA,KAHA;AAIA,UAAA,gBAAA,EAAA,IAJA,CAIA;;AAJA;AAlBA;AAFA,KAAA;AA4BA,GA9BA;AA+BA,EAAA,OA/BA,qBA+BA,CAAA,CA/BA;AAgCA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AADA,GAhCA;AAqCA,EAAA,OArCA,qBAqCA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,wCAAA,EAAA,KAAA,MAAA;AACA,SAAA,WAAA;AACA,SAAA,MAAA;AACA,GAzCA;AA0CA,EAAA,QAAA,EAAA,CACA;AACA;AACA;AAHA,GA1CA;AA+CA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,UAAA,KAAA,GAAA,IAAA;AACA,WAAA,KAAA,CACA,GADA,CACA,KAAA,IAAA,GAAA,SADA,EACA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,EAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AAAA;AAAA,OADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,CAAA,EAAA,GAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,KAAA,EAAA,CAAA,CALA;AAMA,KATA;AAUA,IAAA,WAVA,yBAUA;AACA,WAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EADA,CACA;AACA,KAZA;AAaA,IAAA,WAbA,yBAaA;AACA,UAAA,KAAA,GAAA,IAAA;AACA,WAAA,KAAA,CACA,GADA,CACA,KAAA,IAAA,GAAA,YADA,EACA;AACA,QAAA,MAAA,EAAA;AAAA,UAAA,IAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AAAA;AADA,OADA,EAIA,IAJA,CAIA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,aAAA,CAAA,MAAA,GAAA,KAAA,CAAA,QAAA,CAAA,KAAA,GAAA,gBAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,QAAA;AACA,OARA,EASA,KATA,CASA,UAAA,KAAA,EAAA,CAAA,CATA;AAUA;AAzBA;AA/CA,CAAA","sourcesContent":["<template>\n  <div>\n    <van-nav-bar left-text=\"返回\" left-arrow @click-left=\"onClickLeft\" />\n    <van-loading\n      type=\"circular\"\n      color=\"#1989fa\"\n      vertical\n      v-show=\"!this.playerOptions.sources[0].src\"\n      size=\"24px\"\n      style=\"margin-top:30px\"\n    ></van-loading>\n    <span v-if=\"this.playerOptions.sources[0].src\">\n      <video-player\n        class=\"video-player vjs-custom-skin\"\n        ref=\"videoPlayer\"\n        :playsinline=\"true\"\n        :options=\"playerOptions\"\n      />\n    </span>\n\n    <van-cell\n      v-show=\"this.playerOptions.sources[0].src\"\n      title=\"MV信息\"\n      :value=\"MvDetail.publishTime\"\n      size=\"large\"\n      :label=\"MvDetail.name+'-'+MvDetail.artistName\"\n    />\n  </div>\n</template>\n<script>\n// Similarly, you can also introduce the plugin resource pack you want to use within the component\n// import 'some-videojs-plugin'\nexport default {\n  data() {\n    return {\n      MvDetail: {},\n      playerOptions: {\n        playbackRates: [0.7, 1.0, 1.5, 2.0], //播放速度\n        autoplay: false, //如果true,浏览器准备好时开始回放。\n        muted: false, // 默认情况下将会消除任何音频。\n        loop: true, // 导致视频一结束就重新开始。\n        preload: \"auto\", // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n        language: \"zh-CN\",\n        aspectRatio: \"16:9\", // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n        fluid: true, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n        sources: [\n          {\n            type: \"\", //这里的种类支持很多种：基本视频格式、直播、流媒体等，具体可以参看git网址项目\n            src: \"\" //url地址\n          }\n        ],\n        // poster: this.MvDetail.cover?this.MvDetail.cover:require(\"../assets/logo.png\"), //你的封面地址\n        width: document.documentElement.clientWidth, //播放器宽度\n        notSupportedMessage: \"此视频暂无法播放，请稍后再试\", //允许覆盖Video.js无法播放媒体源时显示的默认信息。\n        controlBar: {\n          timeDivider: true,\n          durationDisplay: true,\n          remainingTimeDisplay: false,\n          fullscreenToggle: true //全屏按钮\n        }\n      }\n    };\n  },\n  created() {},\n  props: {\n    name: {\n      type: String\n    }\n  },\n  mounted() {\n    console.log(\"this is current player instance object\", this.player);\n    this.getMvDetail();\n    this.openMv();\n  },\n  computed: {\n    // player() {\n    //   return this.$refs.videoPlayer.player;\n    // }\n  },\n  methods: {\n    openMv() {\n      const this_ = this;\n      this.$http\n        .get(this.host + \"/mv/url\", { params: { id: this.$route.params.id } })\n        .then(function(response) {\n          this_.playerOptions.sources[0].src = response.data.data.url;\n        })\n        .catch(function(error) {});\n    },\n    onClickLeft() {\n      this.$router.go(-1); //返回上一层\n    },\n    getMvDetail() {\n      const this_ = this;\n      this.$http\n        .get(this.host + \"/mv/detail\", {\n          params: { mvid: this.$route.params.id }\n        })\n        .then(response => {\n          this_.MvDetail = response.data.data;\n          this_.playerOptions.poster = this_.MvDetail.cover + \"?param=320y180\";\n          console.log(this_.MvDetail);\n        })\n        .catch(error => {});\n    }\n  }\n};\n</script>\n \n<style scoped>\n/* .play-button {\n  　　width: 72px;\n  height: 72px;\n  border-radius: 100%;\n  z-index: 100;\n  background-color: #ffffff;\n  border: solid 1px #979797;\n} */\n</style>\n "],"sourceRoot":"src/pages"}]}