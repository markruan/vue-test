{"remainingRequest":"/Users/mark/vue/vue-test/node_modules/babel-loader/lib/index.js!/Users/mark/vue/vue-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mark/vue/vue-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/vue/vue-test/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mark/vue/vue-test/src/App.vue","mtime":1602922605391},{"path":"/Users/mark/vue/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/vue/vue-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mark/vue/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/vue/vue-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/mark/vue/vue-test/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/mark/vue/vue-test/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Aplayer from \"vue-aplayer\";\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  name: \"app\",\n  data: function data() {\n    return {\n      musicInfo: {}\n    };\n  },\n  components: {\n    Aplayer: Aplayer\n  },\n  watch: {\n    songUrl: function songUrl(val) {\n      var _this = this;\n\n      if (val) {\n        this.show = true;\n        setTimeout(function () {\n          var aplayer = _this.$refs.aplayer;\n          aplayer.play();\n        }, 1000);\n      }\n    },\n    songId: function songId(val) {\n      if (val) {\n        this.getMusicInfo();\n      }\n    },\n    playing: function playing(val) {\n      if (!val) {\n        this.$refs.aplayer.pause();\n      } else {\n        this.$refs.aplayer.play();\n      }\n    }\n  },\n  created: function created() {\n    this.show = false;\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  computed: _objectSpread({}, mapState([\"songArtist\", \"songId\", \"songImg\", \"songName\", \"songUrl\", \"playing\", \"showAplayer\"])),\n  methods: _objectSpread(_objectSpread({}, mapActions([\"setSongNameActions\", \"setDurationActions\", \"setSongIdActions\", \"setSongUrlActions\", \"setSongImgActions\", \"setSongArtistActions\", \"setCurrentTimeActions\", \"setPlayingActions\"])), {}, {\n    handleEvent: function handleEvent(e) {// console.log(e);\n    },\n    isplay: function isplay(e) {\n      this.setPlayingActions(true);\n    },\n    play: function play(e) {\n      this.setPlayingActions(true);\n      this.setDurationActions(e.target.duration);\n    },\n    ispause: function ispause(e) {\n      this.setPlayingActions(false);\n    },\n    timeupdate: function timeupdate(e) {\n      this.setCurrentTimeActions(e.target.currentTime);\n    },\n    getMusicInfo: function () {\n      var _getMusicInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var songData, this_;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.get(this.host + \"/song/detail\", {\n                  params: {\n                    ids: this.$route.params.id\n                  }\n                });\n\n              case 2:\n                songData = _context2.sent;\n                this.setSongNameActions(songData.data.songs[0].name);\n                this.setSongIdActions(songData.data.songs[0].id);\n                this.setSongImgActions(songData.data.songs[0].al.picUrl);\n                this.setSongArtistActions(songData.data.songs[0].ar[0].name);\n                this_ = this;\n                this.$http.get(this.host + \"/song/url\", {\n                  params: {\n                    id: this.$route.params.id\n                  }\n                }).then(function (response) {\n                  _this2.setSongUrlActions(response.data.data[0].url);\n                }).catch(function (error) {\n                  console.log(\"接口或处理逻辑出错\");\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getMusicInfo() {\n        return _getMusicInfo.apply(this, arguments);\n      }\n\n      return getMusicInfo;\n    }()\n  })\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"view\">\n      <router-view />\n    </div>\n    <div class=\"player\" v-if=\"songUrl\" v-show=\"showAplayer\">\n      <aplayer\n        ref=\"aplayer\"\n        autoplay\n        @timeupdate=\"timeupdate\"\n        @pause=\"handleEvent\"\n        :music=\"{\n            title: this.songName,\n            artist: this.songArtist,\n            src: this.songUrl,\n            pic: this.songImg, \n          }\"\n        :currentTime=\"0\"\n        fixed\n        listFolded\n        @canplay=\"handleEvent\"\n        @play=\"play\"\n        @abort=\"handleEvent\"\n        @canplaythrough=\"handleEvent\"\n        @durationchange=\"handleEvent\"\n        @emptied=\"handleEvent\"\n        @ended=\"handleEvent\"\n        @error=\"handleEvent\"\n        @loadeddata=\"handleEvent\"\n        @loadedmetadata=\"handleEvent\"\n        @loadstart=\"handleEvent\"\n        @playing=\"handleEvent\"\n        @progress=\"handleEvent\"\n        @ratechange=\"handleEvent\"\n        @readystatechange=\"handleEvent\"\n        @seeked=\"handleEvent\"\n        @seeking=\"handleEvent\"\n        @stalled=\"handleEvent\"\n        @suspend=\"handleEvent\"\n        @volumechange=\"handleEvent\"\n        @waiting=\"handleEvent\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Aplayer from \"vue-aplayer\";\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  name: \"app\",\n  data: () => ({\n    musicInfo: {}\n  }),\n  components: {\n    Aplayer\n  },\n  watch: {\n    songUrl: function(val) {\n      if (val) {\n        this.show = true;\n        setTimeout(() => {\n          let aplayer = this.$refs.aplayer;\n          aplayer.play();\n        }, 1000);\n      }\n    },\n    songId(val) {\n      if (val) {\n        this.getMusicInfo();\n      }\n    },\n    playing(val) {\n      if (!val) {\n        this.$refs.aplayer.pause();\n      } else {\n        this.$refs.aplayer.play();\n      }\n    }\n  },\n  created() {\n    this.show = false;\n  },\n  async mounted() {},\n  computed: {\n    ...mapState([\n      \"songArtist\",\n      \"songId\",\n      \"songImg\",\n      \"songName\",\n      \"songUrl\",\n      \"playing\",\n      \"showAplayer\"\n    ])\n  },\n  methods: {\n    ...mapActions([\n      \"setSongNameActions\",\n      \"setDurationActions\",\n      \"setSongIdActions\",\n      \"setSongUrlActions\",\n      \"setSongImgActions\",\n      \"setSongArtistActions\",\n      \"setCurrentTimeActions\",\n      \"setPlayingActions\"\n    ]),\n     handleEvent(e) {\n      // console.log(e);\n    },\n    isplay(e) {\n      this.setPlayingActions(true);\n    },\n    play(e) {\n      this.setPlayingActions(true);\n      this.setDurationActions(e.target.duration);\n      \n    },\n    ispause(e) {\n      this.setPlayingActions(false);\n    },\n    timeupdate(e) {\n      this.setCurrentTimeActions(e.target.currentTime);\n    },\n    async getMusicInfo() {\n      const songData = await this.$http.get(this.host + \"/song/detail\", {\n        params: {\n          ids: this.$route.params.id\n        }\n      });\n      this.setSongNameActions(songData.data.songs[0].name);\n      this.setSongIdActions(songData.data.songs[0].id);\n      this.setSongImgActions(songData.data.songs[0].al.picUrl);\n      this.setSongArtistActions(songData.data.songs[0].ar[0].name);\n\n      const this_ = this;\n      this.$http\n        .get(this.host + \"/song/url\", { params: { id: this.$route.params.id } })\n        .then(response => {\n          this.setSongUrlActions(response.data.data[0].url);\n        })\n        .catch(error => {\n          console.log(\"接口或处理逻辑出错\");\n        });\n    }\n  }\n};\n</script>\n<style scoped>\n.player {\n  position: fixed;\n  width: 100%;\n  background-color: white;\n  bottom: 0;\n}\n.view {\n  margin-bottom: 22%;\n}\n</style>\n \n"],"sourceRoot":"src"}]}