{"remainingRequest":"/Users/mark/vue/vue-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/vue/vue-test/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mark/vue/vue-test/src/App.vue","mtime":1602916149286},{"path":"/Users/mark/vue/vue-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mark/vue/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/vue/vue-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Aplayer from \"vue-aplayer\";\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  name: \"app\",\n  data: () => ({\n    musicInfo: {}\n  }),\n  components: {\n    Aplayer\n  },\n  watch: {\n    songUrl: function(val) {\n      if (val) {\n        this.show = true;\n        setTimeout(() => {\n          let aplayer = this.$refs.aplayer;\n          aplayer.play();\n        }, 1000);\n      }\n    },\n    songId(val){\n      if (val) { \n        this.getMusicInfo()\n      }\n    },\n    playing(val){\n      if (!val) {\n         this.$refs.aplayer.pause()\n      }\n    }\n  },\n  created() {\n    this.show = false;\n  },\n  async mounted() {},\n  computed: {\n    ...mapState([\"songArtist\", \"songId\", \"songImg\", \"songName\", \"songUrl\",\"playing\",\"showAplayer\"])\n  },\n  methods: {\n    ...mapActions([\n      \"setSongNameActions\",\n      \"setDurationActions\",\n      \"setSongIdActions\",\n      \"setSongUrlActions\",\n      \"setSongImgActions\",\n      \"setSongArtistActions\",\n      \"setCurrentTimeActions\",\n      \"setPlayingActions\"\n    ]),\n    isplay(e){\n     this.setPlayingActions(true)\n    },\n    play(e) { \n      this.setDurationActions(this.$refs.aplayer.playStat.duration)\n      console.log(this.$refs.aplayer.playStat.duration)\n      \n    },\n    ispause(e) {\n       this.setPlayingActions(false)\n    },\n    timeupdate(e) {\n      this.setCurrentTimeActions( e.target.currentTime);\n     \n    },\n    async getMusicInfo() {\n      const songData = await this.$http.get(this.host + \"/song/detail\", {\n        params: {\n          ids: this.$route.params.id\n        }\n      });\n      this.setSongNameActions(songData.data.songs[0].name);\n      this.setSongIdActions(songData.data.songs[0].id);\n      this.setSongImgActions(songData.data.songs[0].al.picUrl);\n      this.setSongArtistActions(songData.data.songs[0].ar[0].name);\n\n      const this_ = this;\n      this.$http\n        .get(this.host + \"/song/url\", { params: { id: this.$route.params.id } })\n        .then(response => {\n          this.setSongUrlActions(response.data.data[0].url);\n        })\n        .catch(error => {\n          console.log(\"接口或处理逻辑出错\");\n        });\n    }\n  }\n};\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"view\">\n      <router-view />\n    </div>\n    <div class=\"player\" v-if=\"songUrl\" v-show=\"showAplayer\">\n      <aplayer\n        ref=\"aplayer\"\n        autoplay\n        @timeupdate=\"timeupdate\"\n        @pause=\"ispause\"\n        :music=\"{\n            title: this.songName,\n            artist: this.songArtist,\n            src: this.songUrl,\n            pic: this.songImg, \n          }\"\n        :currentTime=\"0\"\n        fixed\n        listFolded\n        @canplay=\"play\"\n        @play=\"isplay\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Aplayer from \"vue-aplayer\";\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  name: \"app\",\n  data: () => ({\n    musicInfo: {}\n  }),\n  components: {\n    Aplayer\n  },\n  watch: {\n    songUrl: function(val) {\n      if (val) {\n        this.show = true;\n        setTimeout(() => {\n          let aplayer = this.$refs.aplayer;\n          aplayer.play();\n        }, 1000);\n      }\n    },\n    songId(val){\n      if (val) { \n        this.getMusicInfo()\n      }\n    },\n    playing(val){\n      if (!val) {\n         this.$refs.aplayer.pause()\n      }\n    }\n  },\n  created() {\n    this.show = false;\n  },\n  async mounted() {},\n  computed: {\n    ...mapState([\"songArtist\", \"songId\", \"songImg\", \"songName\", \"songUrl\",\"playing\",\"showAplayer\"])\n  },\n  methods: {\n    ...mapActions([\n      \"setSongNameActions\",\n      \"setDurationActions\",\n      \"setSongIdActions\",\n      \"setSongUrlActions\",\n      \"setSongImgActions\",\n      \"setSongArtistActions\",\n      \"setCurrentTimeActions\",\n      \"setPlayingActions\"\n    ]),\n    isplay(e){\n     this.setPlayingActions(true)\n    },\n    play(e) { \n      this.setDurationActions(this.$refs.aplayer.playStat.duration)\n      console.log(this.$refs.aplayer.playStat.duration)\n      \n    },\n    ispause(e) {\n       this.setPlayingActions(false)\n    },\n    timeupdate(e) {\n      this.setCurrentTimeActions( e.target.currentTime);\n     \n    },\n    async getMusicInfo() {\n      const songData = await this.$http.get(this.host + \"/song/detail\", {\n        params: {\n          ids: this.$route.params.id\n        }\n      });\n      this.setSongNameActions(songData.data.songs[0].name);\n      this.setSongIdActions(songData.data.songs[0].id);\n      this.setSongImgActions(songData.data.songs[0].al.picUrl);\n      this.setSongArtistActions(songData.data.songs[0].ar[0].name);\n\n      const this_ = this;\n      this.$http\n        .get(this.host + \"/song/url\", { params: { id: this.$route.params.id } })\n        .then(response => {\n          this.setSongUrlActions(response.data.data[0].url);\n        })\n        .catch(error => {\n          console.log(\"接口或处理逻辑出错\");\n        });\n    }\n  }\n};\n</script>\n<style scoped>\n.player {\n  position: fixed;\n  width: 100%;\n  background-color: white;\n  bottom: 0;\n}\n.view {\n  margin-bottom: 22%;\n}\n</style>\n \n"]}]}