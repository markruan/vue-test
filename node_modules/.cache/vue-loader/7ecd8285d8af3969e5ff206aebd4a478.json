{"remainingRequest":"/Users/mc/项目/VUE/2020/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mc/项目/VUE/2020/src/pages/player.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mc/项目/VUE/2020/src/pages/player.vue","mtime":1602473410241},{"path":"/Users/mc/项目/VUE/2020/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mc/项目/VUE/2020/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mc/项目/VUE/2020/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mc/项目/VUE/2020/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import Aplayer from \"vue-aplayer\";\n// import { mapState, mapActions } from \"vuex\";\n// export default {\n//   name: \"Player\",\n\n//   data() {\n//     return {\n//       audioSources: \"\",\n//       musicInfo: {}\n//     };\n//   },\n//   components: {\n//     Aplayer\n//   },\n//   created() {},\n//   mounted() {\n//     this.getMusicInfo();\n//   },\n//   computed: {\n//     ...mapState([\"playList\", \"playHistory\"])\n//   },\n//   methods: {\n//     getMusicInfo() {\n//       const this_ = this;\n//       this.$http\n//         .get(\"/api/song/url\", { params: { id: this.$route.params.id } })\n//         .then(response => {\n    \n        \n//           for (const item of this.playList) {\n//               if ((item.id == this.$route.params.id)) {\n//               this.musicInfo = item;\n//             }\n//           }\n              \n\n//           this.audioSources = {\n//             title: this.musicInfo.name,\n//             artist: this.musicInfo.ar[0].name,\n//             pic: this.musicInfo.al.picUrl + \"?param=100y100\",\n//             src: response.data.data[0].url,\n//             id: this.$route.params.id\n//           };\n//           this.$store.commit(\"addSongToHistory\", this.audioSources);\n//         })\n//         .catch(error => {\n//           console.log(\"接口或处理逻辑出错\");\n//         });\n//     }\n//   }\n// };\n// ",{"version":3,"sources":["player.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"player.vue","sourceRoot":"src/pages","sourcesContent":[" \n<template>\n  <div id=\"app\">\n    <div>\n      <div class=\"music-list\">\n        <div>音乐列表</div>\n        <div></div>\n      </div>\n      <h1 @click=\"initAudio\">点击打开音乐</h1>\n      <h1 @click=\"playAudio\">点击播放音乐</h1>\n      <h1 @click=\"pauseAudio\">点击暂停音乐</h1>\n      <div @click=\"close\">点击关闭音乐</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Axios from 'axios'\nexport default {\n  name: 'app',\n  data () {\n    return {\n      msg: '点击播放音乐',\n      musicList: [0, 1, 2, 3, 4, 5]\n    }\n  },\n  methods:{\n    initData(){\n      const param = {\n        all: '周杰伦',\n        ft: 'music',\n        itemset: 'web_2013',\n        client: 'kt',\n        pn: 0,\n        rn: 5,\n        rformat: 'json',\n        encoding: 'utf8'\n      }\n    //   Axios.get('/r.s', {\n    //     params: param\n    //   }).then(res=>{\n    //     console.log(res)\n    //     console.log(eval('(' + res.data + ')'))\n    //   }).catch(error => {\n    //     console.log(error)\n    //   });\n    },\n    // 使用\n    initAudio(){\n      let option = {\n        playList: [{\n          src: 'http://wechatapppro-1252524126.file.myqcloud.com/appG1VMUALC2470/audio_compressed/1505377565_4fd15d83213bceb23a97ad6af45f1dae.mp3'\n        }],\n        currentIndex: Math.floor(Math.random() * 1),\n        isPlay: true\n      }\n      this.$initAudio(option)\n    },\n    playAudio(){\n      this.$playAudio()\n    },\n    pauseAudio(){\n      this.$pauseAudio()\n    },\n    close(){\n      this.$audioClose()\n    }\n  },\n  mounted() {\n    this.initData()\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\nh1, h2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n\n \n//   <script>\n// import Aplayer from \"vue-aplayer\";\n// import { mapState, mapActions } from \"vuex\";\n// export default {\n//   name: \"Player\",\n\n//   data() {\n//     return {\n//       audioSources: \"\",\n//       musicInfo: {}\n//     };\n//   },\n//   components: {\n//     Aplayer\n//   },\n//   created() {},\n//   mounted() {\n//     this.getMusicInfo();\n//   },\n//   computed: {\n//     ...mapState([\"playList\", \"playHistory\"])\n//   },\n//   methods: {\n//     getMusicInfo() {\n//       const this_ = this;\n//       this.$http\n//         .get(\"/api/song/url\", { params: { id: this.$route.params.id } })\n//         .then(response => {\n    \n        \n//           for (const item of this.playList) {\n//               if ((item.id == this.$route.params.id)) {\n//               this.musicInfo = item;\n//             }\n//           }\n              \n\n//           this.audioSources = {\n//             title: this.musicInfo.name,\n//             artist: this.musicInfo.ar[0].name,\n//             pic: this.musicInfo.al.picUrl + \"?param=100y100\",\n//             src: response.data.data[0].url,\n//             id: this.$route.params.id\n//           };\n//           this.$store.commit(\"addSongToHistory\", this.audioSources);\n//         })\n//         .catch(error => {\n//           console.log(\"接口或处理逻辑出错\");\n//         });\n//     }\n//   }\n// };\n// </script>"]}]}